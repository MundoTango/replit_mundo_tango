#!/usr/bin/env tsx

import { storage } from '../server/storage';

async function createProfessionalGroups() {
  console.log('🎯 Creating Professional Groups for Mundo Tango...\n');
  
  const professionalGroups = [
    { name: 'Teachers Network', slug: 'teachers-network', role: 'teacher', emoji: '🎓', description: 'Connect with tango teachers worldwide. Share teaching methods, find substitutes, and collaborate on workshops.' },
    { name: 'DJs United', slug: 'djs-united', role: 'dj', emoji: '🎧', description: 'Network for tango DJs to share playlists, discuss cortinas, and find gigs at milongas.' },
    { name: 'Musicians Guild', slug: 'musicians-guild', role: 'musician', emoji: '🎵', description: 'Tango musicians collaborating on performances, sharing sheet music, and organizing orchestras.' },
    { name: 'Organizers Hub', slug: 'organizers-hub', role: 'organizer', emoji: '📅', description: 'Event organizers sharing best practices, coordinating calendars, and supporting each other.' },
    { name: 'Hosts Alliance', slug: 'hosts-alliance', role: 'host', emoji: '🏠', description: 'Milonga hosts exchanging ideas, sharing venues, and building stronger tango communities.' },
    { name: 'Guides Network', slug: 'guides-network', role: 'guide', emoji: '🗺️', description: 'Tango guides helping visitors discover the best milongas, teachers, and experiences.' },
    { name: 'Photographers Circle', slug: 'photographers-circle', role: 'photographer', emoji: '📸', description: 'Capturing the beauty of tango through photography and videography.' },
    { name: 'Content Creators', slug: 'content-creators', role: 'content_creator', emoji: '📱', description: 'Creating and sharing tango content across social media and digital platforms.' },
    { name: 'Tango Travelers', slug: 'tango-travelers', role: 'tango_traveler', emoji: '🌍', description: 'Passionate dancers exploring tango scenes around the world.' },
    { name: 'Tour Operators', slug: 'tour-operators', role: 'tour_operator', emoji: '✈️', description: 'Organizing tango tours, festivals, and travel experiences.' },
    { name: 'Volunteers United', slug: 'volunteers-united', role: 'volunteer', emoji: '🤝', description: 'Volunteers supporting the tango community through events and initiatives.' },
    { name: 'Historians Society', slug: 'historians-society', role: 'historian', emoji: '📚', description: 'Preserving and sharing the rich history and culture of tango.' },
    { name: 'Singers Association', slug: 'singers-association', role: 'singer', emoji: '🎤', description: 'Tango singers performing and preserving the vocal traditions of tango.' },
    { name: 'Taxi Dancers Network', slug: 'taxi-dancers-network', role: 'taxi_dancer', emoji: '🎫', description: 'Professional dancers available for hire at milongas and events.' },
    { name: 'Dance Leaders Forum', slug: 'dance-leaders-forum', role: 'dancer_leader', emoji: '🕺', description: 'Leaders sharing techniques, connection tips, and floor navigation skills.' },
    { name: 'Dance Followers Forum', slug: 'dance-followers-forum', role: 'dancer_follower', emoji: '💃', description: 'Followers discussing technique, expression, and partnership dynamics.' },
    { name: 'Switch Dancers Group', slug: 'switch-dancers-group', role: 'dancer_switch', emoji: '🕺💃', description: 'Dancers who enjoy both leading and following roles.' },
    { name: 'Tango Schools Network', slug: 'tango-schools-network', role: 'tango_school', emoji: '🏫', description: 'Tango schools and academies sharing curriculum and best practices.' },
    { name: 'Tango Houses Association', slug: 'tango-houses-association', role: 'tango_house', emoji: '🏢', description: 'Traditional tango houses preserving milonga culture and traditions.' },
    { name: 'Performers Guild', slug: 'performers-guild', role: 'performer', emoji: '🎭', description: 'Stage performers bringing tango to theaters and shows worldwide.' },
    // Additional catch-all groups
    { name: 'Dancers Community', slug: 'dancers-community', role: 'dancer', emoji: '💃', description: 'All tango dancers sharing their passion for the dance.' }
  ];

  let created = 0;
  let skipped = 0;
  let errors = 0;

  for (const groupData of professionalGroups) {
    try {
      // Check if group already exists
      const existingGroup = await storage.getGroupBySlug(groupData.slug);
      
      if (existingGroup) {
        console.log(`⏭️  Skipping ${groupData.name} - already exists`);
        skipped++;
        continue;
      }

      // Create the group (ID is auto-generated by database)
      const newGroup = await storage.createGroup({
        name: groupData.name,
        slug: groupData.slug,
        type: 'professional',
        roleType: groupData.role,
        emoji: groupData.emoji,
        description: groupData.description,
        isPrivate: false,
        memberCount: 0,
        createdAt: new Date(),
        updatedAt: new Date()
      });

      console.log(`✅ Created ${groupData.name} (${groupData.emoji})`);
      created++;
    } catch (error) {
      console.error(`❌ Failed to create ${groupData.name}:`, error);
      errors++;
    }
  }

  console.log('\n📊 Summary:');
  console.log(`✅ Created: ${created} groups`);
  console.log(`⏭️  Skipped: ${skipped} groups`);
  console.log(`❌ Errors: ${errors} groups`);
  console.log('\n🎉 Professional groups setup complete!');
}

// Run the script
createProfessionalGroups()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error('Script failed:', error);
    process.exit(1);
  });